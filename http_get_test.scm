(use rfc.tls)
(use rfc.http)
(use gauche.process)

(define (http-get-test cert-path)
  (unless (eq? cert-path 'not-change)
    (tls-ca-bundle-path cert-path))
  (print "tls-ca-bundle-path=" (tls-ca-bundle-path))
  (guard (ex [else (print ex)])
    (receive (status header-list body)
        (http-get "www.microsoft.com" "/" :secure #t)
      (print "http status=" status)))
  (print))

(print)
(print "== HTTP TEST ==")
(print)

(http-get-test 'not-change)
(http-get-test 'system)
(http-get-test "/etc/ssl/cert.pem")
(http-get-test "/usr/local/etc/openssl/cert.pem")
(http-get-test "/usr/local/etc/openssl@1.1/cert.pem")
(http-get-test "/usr/local/etc/openssl@3.0/cert.pem")
(http-get-test "/usr/local/etc/openssl@3/cert.pem")
(http-get-test "/opt/homebrew/etc/openssl@1.1/cert.pem")
(http-get-test "/opt/homebrew/etc/openssl@3.0/cert.pem")
(http-get-test "/opt/homebrew/etc/openssl@3/cert.pem")

